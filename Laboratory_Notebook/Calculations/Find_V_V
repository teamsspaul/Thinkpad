#!/usr/bin/env python3

"""
Chem Calculations
"""

__author__     =  "Paul Mendoza"
__copyright__  =  "Copyright 2016, Planet Earth"
__credits__    = ["Sunil Chirayath",
                  "Charles Folden",
                  "Jeremy Conlin"]
__license__    =  "GPL"
__version__    =  "1.0.1"
__maintainer__ =  "Paul Mendoza"
__email__      =  "paul.m.mendoza@gmail.com"
__status__     =  "Production"

################################################################
##################### Import packages ##########################
################################################################

import os.path
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime
from uncertainties import ufloat
from uncertainties.umath import *
from uncertainties import unumpy as unp
import re
import time
start_time = time.time()

import Functions as fun

#######################################################
# What volumes to you need to get final solution of
# x concentration and y molarity
# You know the initial molarities, the final volume
# and molarity
#######################################################

Temperature=ufloat(24.8,3)
gramsOmol=ufloat(63.0130,0.0012)
dfDen=pd.read_csv('../Data/Nitric_Acid.csv')

M1=ufloat(15.43,0.06)
m1=fun.ConvertMol(True,M1,gramsOmol,dfDen,Temperature)

M2=ufloat(0,0)
m2=ufloat(0,0)

M3=ufloat(1.12,0.08)
m3=fun.ConvertMol(True,M3,gramsOmol,dfDen,Temperature)
Vol3=ufloat(2.048,0.026)

WtConcentration1=fun.GetWt(m1,gramsOmol)
WtConcentration2=fun.GetWt(m2,gramsOmol)
WtConcentration3=fun.GetWt(m3,gramsOmol)
    
p1=fun.GetDensity(Temperature,WtConcentration1,dfDen)
p2=fun.GetDensity(Temperature,WtConcentration2,dfDen)
p3=fun.GetDensity(Temperature,WtConcentration3,dfDen)

A=(1-WtConcentration1)*p1
B=(1-WtConcentration2)*p2
b1=(1-WtConcentration3)*Vol3*p3
b2=M3*Vol3

C1=M2-M1/A
C2=b2-(M1*b1)/A
Vol2=C2/C1
Vol1=(b1-B*Vol2)/A


#Check calculation
#print(M3,Vol3)

#m3,p3,Vol3,Wt,M3=fun.NewConcentration(m1,m2,gramsOmol,
#                                Temperature,dfDen,
#                                Vol1,Vol2)

#print(M3,Vol3)

print("Combine "+str(Vol1)+" ml of "+str(M1)+\
      " M solution with "+str(Vol2)+\
      " ml of "+str(M2)+" M solution, to get "+str(Vol3)+" ml of "+\
      str(M3)+" M solution")


###################### Time To execute #################

print("--- %s seconds ---" % (time.time() - start_time))
