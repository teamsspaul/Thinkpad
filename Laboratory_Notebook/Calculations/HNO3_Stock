#!/usr/bin/env python3

"""
Chem Calculations
"""

__author__     =  "Paul Mendoza"
__copyright__  =  "Copyright 2016, Planet Earth"
__credits__    = ["Sunil Chirayath",
                  "Charles Folden",
                  "Jeremy Conlin"]
__license__    =  "GPL"
__version__    =  "1.0.1"
__maintainer__ =  "Paul Mendoza"
__email__      =  "paul.m.mendoza@gmail.com"
__status__     =  "Production"

################################################################
##################### Import packages ##########################
################################################################

import os.path
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime
from uncertainties import ufloat
from uncertainties.umath import *
from uncertainties import unumpy as unp
import re
import time
start_time = time.time()

import Functions as fun

#######################################################
############          Given              ##############
#######################################################

WtConcentration=ufloat(69,0.5)

#######################################################
############ Calculate grams per mol of ###############
############    a chemical formula      ###############
#######################################################

#Make sure your chemical form has no repeats
#And no parentheses
ChemicalFormula='HNO_3'
ChemicalFormulaError=[0,0,0,0,0,0,0] #+/- error in integers of
                                     #chemical formula
ChemicalFormula=ChemicalFormula+"    "
List=fun.ChemList(ChemicalFormula)

#Enter Modifications:
#1. Each element should be a single item in the list
#2. Format: zaid atomfraction+/-error zaid atomfraction+/-error
#   or    : zaid atomfraction error zaid atomfraction
# For no modifications set = ['']
Modifications=['']

df = pd.read_csv('../Data/AtomicWeights.csv')


ModMass,ModSymbols,AtomFractions=fun.FormatMods(Modifications,df)
MolarMass=fun.DetermineMolarMass(List,df,
                                 ModSymbols,ModMass,
                                 AtomFractions,ChemicalFormulaError)

#######################################################
############### Molality and Molarity #################
#######################################################

m=fun.WttoMolality(MolarMass,WtConcentration)

#Density in grams per cc or grams per ml
dfDen=pd.read_csv('../Data/Nitric_Acid.csv')
Temperature=ufloat(24.8,3) #Same degrees as dfDen!!!

M=fun.ConvertMol(False,m,MolarMass,dfDen,Temperature)

#######################################################
##################### Density #########################
#######################################################

density=fun.GetDensity(Temperature,WtConcentration,dfDen)

#######################################################
################# Print Out Answer ####################
#######################################################

print("Molarity  : "+str(M))
print("Molality  : "+str(m))
print("WtConcentr: "+str(WtConcentration))
print("Molar Mass: "+str(MolarMass))
print("Density   : "+str(density))
print("pH        : "+str(-log(M,10)))

#pH=14-pOH

###################### Time To execute #################

print("--- %s seconds ---" % (time.time() - start_time))
