#!/usr/bin/env python3

"""
Chem Calculations
"""

__author__     =  "Paul Mendoza"
__copyright__  =  "Copyright 2016, Planet Earth"
__credits__    = ["Sunil Chirayath",
                  "Charles Folden",
                  "Jeremy Conlin"]
__license__    =  "GPL"
__version__    =  "1.0.1"
__maintainer__ =  "Paul Mendoza"
__email__      =  "paul.m.mendoza@gmail.com"
__status__     =  "Production"

################################################################
##################### Import packages ##########################
################################################################

import os.path
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime
from uncertainties import ufloat
from uncertainties.umath import *
from uncertainties import unumpy as unp
import re
import time
start_time = time.time()

import Functions as fun

#######################################################
# To create the Fe(II) solution at a particular
# concentration of nitric acid and Fe(II) of a
# particular volume
#######################################################

V3=ufloat(4,0.02)
N=100
Range=0.1

#Fe(II)
MF1=ufloat(2.302,0.009)
MF2=ufloat(0,0)
MF3=ufloat(0.024,0.001)
V1=(MF3*V3)/MF1
gramsOmolF=ufloat(248.022,0.017)
p1=ufloat(1.418,0.005)

##### HNO3
gramsOmolN=ufloat(63.0130,0.0012)
Temperature=ufloat(24.8,3)
dfDen=pd.read_csv('../Data/Nitric_Acid.csv')
MN1=ufloat(0,0)
MN3=ufloat(4,0.05)
mN3=fun.ConvertMol(True,MN3,gramsOmolN,dfDen,Temperature)
WtN3=fun.GetWt(mN3,gramsOmolN)
p3=fun.GetDensity(Temperature,WtN3,dfDen)

#### Calculation

C=(V3*MN3)/(V3*p3-V1*p1)

MN2=(MN3*V3)/(V3-V1) # A Guess
MN2Range=np.linspace(MN2-MN2*Range,MN2+MN2*Range,N)

Compare=[]
for MN2i in MN2Range:
    mN2i=fun.ConvertMol(True,MN2i,gramsOmolN,dfDen,Temperature)
    WtN2i=fun.GetWt(mN2i,gramsOmolN)
    p2i=fun.GetDensity(Temperature,WtN2i,dfDen)
    Compare.append(abs(MN2i-C*p2i))
    if Compare[-1]==0:
        break
MN2=MN2Range[Compare.index(min(Compare))]
mN2=fun.ConvertMol(True,MN2,gramsOmolN,dfDen,Temperature)
WtN2=fun.GetWt(mN2,gramsOmolN)
p2=fun.GetDensity(Temperature,WtN2,dfDen)

V2=(V3*p3-V1*p1)/p2

print("Combine "+str(V1)+" ml of "+str(MF1)+\
      " M Fe(II) in "+str(MN1)+" M HNO_3 solution with "+str(V2)+\
      " ml of "+str(MF2)+" M Fe(II) in "+str(MN2)+" M HNO_3 solution, to get "+str(V3)+" ml of "+\
      str(MF3)+" M Fe(II) in "+str(MN3)+" M HNO_3 solution")


###################### Time To execute #################

print("--- %s seconds ---" % (time.time() - start_time))
